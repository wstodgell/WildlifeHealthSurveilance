# .github/workflows/deploy.yml
name: Build and Deploy Docker Images

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "16" # or your preferred Node.js version

      - name: Install CDK and Dependencies
        run: |
          cd CDK
          npm install

      - name: Deploy CDK Stack
        id: cdk-deploy
        run: |
          cd CDK
          npx cdk deploy --all --require-approval never
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: "us-east-1"

      - name: Get ECR URI
        id: get-ecr-uri
        run: |
          # Fetch the ECR repository URI from the CloudFormation stack output
          ECR_URI=$(aws cloudformation describe-stacks \
            --stack-name IoTStack \
            --query "Stacks[0].Outputs[?OutputKey=='EcrRepositoryUri'].OutputValue" \
            --output text)
          echo "ECR_URI=${ECR_URI}" >> $GITHUB_ENV

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build and Push Docker image
        run: |
          echo "Building Docker image from IoT_GPS"
          docker build -t ${{ env.ECR_URI }}/my-iot-gps-app:latest -f IoTMockSensors/IoT_GPS/Dockerfile IoTMockSensors/IoT_GPS
          docker push ${{ env.ECR_URI }}/my-iot-gps-app:latest
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Deploy with CDK
        run: |
          cd CDK
          npm install
          npx cdk deploy --all --require-approval never
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: "us-east-1"
